tv/danmaku/ijk/media/player/AbstractMediaPlayer = TV.Danmaku.Ijk.Media.Player.AbstractMediaPlayer
  <init>()V = .ctor()
  notifyOnBufferingUpdate(I)V = NotifyOnBufferingUpdate(int)
  notifyOnCompletion()V = NotifyOnCompletion()
  notifyOnError(II)Z = NotifyOnError(int, int)
  notifyOnInfo(II)Z = NotifyOnInfo(int, int)
  notifyOnPrepared()V = NotifyOnPrepared()
  notifyOnSeekComplete()V = NotifyOnSeekComplete()
  notifyOnTimedText(Ltv/danmaku/ijk/media/player/IjkTimedText;)V = NotifyOnTimedText(TV.Danmaku.Ijk.Media.Player.IjkTimedText)
  notifyOnVideoSizeChanged(IIII)V = NotifyOnVideoSizeChanged(int, int, int, int)
  resetListeners()V = ResetListeners()
  setDataSource(Ltv/danmaku/ijk/media/player/misc/IMediaDataSource;)V = SetDataSource(TV.Danmaku.Ijk.Media.Player.Misc.IMediaDataSource)
  setOnBufferingUpdateListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnBufferingUpdateListener;)V = SetOnBufferingUpdateListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnBufferingUpdateListener)
  setOnCompletionListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnCompletionListener;)V = SetOnCompletionListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnCompletionListener)
  setOnErrorListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnErrorListener;)V = SetOnErrorListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnErrorListener)
  setOnInfoListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnInfoListener;)V = SetOnInfoListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnInfoListener)
  setOnPreparedListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnPreparedListener;)V = SetOnPreparedListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnPreparedListener)
  setOnSeekCompleteListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnSeekCompleteListener;)V = SetOnSeekCompleteListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnSeekCompleteListener)
  setOnTimedTextListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnTimedTextListener;)V = SetOnTimedTextListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnTimedTextListener)
  setOnVideoSizeChangedListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnVideoSizeChangedListener;)V = SetOnVideoSizeChangedListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnVideoSizeChangedListener)
tv/danmaku/ijk/media/player/AndroidMediaPlayer = TV.Danmaku.Ijk.Media.Player.AndroidMediaPlayer
  <init>()V = .ctor()
  getAudioSessionId()I = AudioSessionId
  getCurrentPosition()J = CurrentPosition
  getDataSource()Ljava/lang/String; = DataSource
  setDataSource(Ljava/lang/String;)V = DataSource
  getDuration()J = Duration
  getInternalMediaPlayer()Landroid/media/MediaPlayer; = InternalMediaPlayer
  isPlayable()Z = IsPlayable
  isPlaying()Z = IsPlaying
  isLooping()Z = Looping
  setLooping(Z)V = Looping
  getMediaInfo()Ltv/danmaku/ijk/media/player/MediaInfo; = MediaInfo
  getVideoHeight()I = VideoHeight
  getVideoSarDen()I = VideoSarDen
  getVideoSarNum()I = VideoSarNum
  getVideoWidth()I = VideoWidth
  getTrackInfo()[Ltv/danmaku/ijk/media/player/misc/ITrackInfo; = GetTrackInfo()
  pause()V = Pause()
  prepareAsync()V = PrepareAsync()
  release()V = Release()
  reset()V = Reset()
  seekTo(J)V = SeekTo(long)
  setAudioStreamType(I)V = SetAudioStreamType(int)
  setDataSource(Landroid/content/Context;Landroid/net/Uri;)V = SetDataSource(Android.Content.Context, Android.Net.Uri)
  setDataSource(Landroid/content/Context;Landroid/net/Uri;Ljava/util/Map;)V = SetDataSource(Android.Content.Context, Android.Net.Uri, System.Collections.Generic.IDictionary<string, string>)
  setDataSource(Ljava/io/FileDescriptor;)V = SetDataSource(Java.IO.FileDescriptor)
  setDisplay(Landroid/view/SurfaceHolder;)V = SetDisplay(Android.Views.ISurfaceHolder)
  setKeepInBackground(Z)V = SetKeepInBackground(bool)
  setLogEnabled(Z)V = SetLogEnabled(bool)
  setScreenOnWhilePlaying(Z)V = SetScreenOnWhilePlaying(bool)
  setSurface(Landroid/view/Surface;)V = SetSurface(Android.Views.Surface)
  setVolume(FF)V = SetVolume(float, float)
  setWakeMode(Landroid/content/Context;I)V = SetWakeMode(Android.Content.Context, int)
  start()V = Start()
  stop()V = Stop()
tv/danmaku/ijk/media/player/annotations/AccessedByNative = TV.Danmaku.Ijk.Media.Player.Annotations.IAccessedByNative
tv/danmaku/ijk/media/player/annotations/CalledByNative = TV.Danmaku.Ijk.Media.Player.Annotations.ICalledByNative
  value()Ljava/lang/String; = Value()
tv/danmaku/ijk/media/player/BuildConfig = TV.Danmaku.Ijk.Media.Player.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
tv/danmaku/ijk/media/player/exceptions/IjkMediaException = TV.Danmaku.Ijk.Media.Player.Exceptions.IjkMediaException
  <init>()V = .ctor()
tv/danmaku/ijk/media/player/ffmpeg/FFmpegApi = TV.Danmaku.Ijk.Media.Player.Ffmpeg.FFmpegApi
  <init>()V = .ctor()
  av_base64_encode([B)Ljava/lang/String; = Av_base64_encode(byte[])
tv/danmaku/ijk/media/player/IjkLibLoader = TV.Danmaku.Ijk.Media.Player.IIjkLibLoader
  loadLibrary(Ljava/lang/String;)V = LoadLibrary(string)
tv/danmaku/ijk/media/player/IjkMediaCodecInfo = TV.Danmaku.Ijk.Media.Player.IjkMediaCodecInfo
  <init>()V = .ctor()
  mCodecInfo = MCodecInfo
  mMimeType = MMimeType
  mRank = MRank
  RANK_ACCEPTABLE = RankAcceptable
  RANK_LAST_CHANCE = RankLastChance
  RANK_MAX = RankMax
  RANK_NON_STANDARD = RankNonStandard
  RANK_NO_SENSE = RankNoSense
  RANK_SECURE = RankSecure
  RANK_SOFTWARE = RankSoftware
  RANK_TESTED = RankTested
  dumpProfileLevels(Ljava/lang/String;)V = DumpProfileLevels(string)
  getLevelName(I)Ljava/lang/String; = GetLevelName(int)
  getProfileLevelName(II)Ljava/lang/String; = GetProfileLevelName(int, int)
  getProfileName(I)Ljava/lang/String; = GetProfileName(int)
  setupCandidate(Landroid/media/MediaCodecInfo;Ljava/lang/String;)Ltv/danmaku/ijk/media/player/IjkMediaCodecInfo; = SetupCandidate(Android.Media.MediaCodecInfo, string)
tv/danmaku/ijk/media/player/IjkMediaMeta = TV.Danmaku.Ijk.Media.Player.IjkMediaMeta
  <init>()V = .ctor()
  AV_CH_BACK_CENTER = AvChBackCenter
  AV_CH_BACK_LEFT = AvChBackLeft
  AV_CH_BACK_RIGHT = AvChBackRight
  AV_CH_FRONT_CENTER = AvChFrontCenter
  AV_CH_FRONT_LEFT = AvChFrontLeft
  AV_CH_FRONT_LEFT_OF_CENTER = AvChFrontLeftOfCenter
  AV_CH_FRONT_RIGHT = AvChFrontRight
  AV_CH_FRONT_RIGHT_OF_CENTER = AvChFrontRightOfCenter
  AV_CH_LAYOUT_2_1 = AvChLayout21
  AV_CH_LAYOUT_2_2 = AvChLayout22
  AV_CH_LAYOUT_2POINT1 = AvChLayout2point1
  AV_CH_LAYOUT_3POINT1 = AvChLayout3point1
  AV_CH_LAYOUT_4POINT0 = AvChLayout4point0
  AV_CH_LAYOUT_4POINT1 = AvChLayout4point1
  AV_CH_LAYOUT_5POINT0 = AvChLayout5point0
  AV_CH_LAYOUT_5POINT0_BACK = AvChLayout5point0Back
  AV_CH_LAYOUT_5POINT1 = AvChLayout5point1
  AV_CH_LAYOUT_5POINT1_BACK = AvChLayout5point1Back
  AV_CH_LAYOUT_6POINT0 = AvChLayout6point0
  AV_CH_LAYOUT_6POINT0_FRONT = AvChLayout6point0Front
  AV_CH_LAYOUT_6POINT1 = AvChLayout6point1
  AV_CH_LAYOUT_6POINT1_BACK = AvChLayout6point1Back
  AV_CH_LAYOUT_6POINT1_FRONT = AvChLayout6point1Front
  AV_CH_LAYOUT_7POINT0 = AvChLayout7point0
  AV_CH_LAYOUT_7POINT0_FRONT = AvChLayout7point0Front
  AV_CH_LAYOUT_7POINT1 = AvChLayout7point1
  AV_CH_LAYOUT_7POINT1_WIDE = AvChLayout7point1Wide
  AV_CH_LAYOUT_7POINT1_WIDE_BACK = AvChLayout7point1WideBack
  AV_CH_LAYOUT_HEXAGONAL = AvChLayoutHexagonal
  AV_CH_LAYOUT_MONO = AvChLayoutMono
  AV_CH_LAYOUT_OCTAGONAL = AvChLayoutOctagonal
  AV_CH_LAYOUT_QUAD = AvChLayoutQuad
  AV_CH_LAYOUT_STEREO = AvChLayoutStereo
  AV_CH_LAYOUT_STEREO_DOWNMIX = AvChLayoutStereoDownmix
  AV_CH_LAYOUT_SURROUND = AvChLayoutSurround
  AV_CH_LOW_FREQUENCY = AvChLowFrequency
  AV_CH_LOW_FREQUENCY_2 = AvChLowFrequency2
  AV_CH_SIDE_LEFT = AvChSideLeft
  AV_CH_SIDE_RIGHT = AvChSideRight
  AV_CH_STEREO_LEFT = AvChStereoLeft
  AV_CH_STEREO_RIGHT = AvChStereoRight
  AV_CH_SURROUND_DIRECT_LEFT = AvChSurroundDirectLeft
  AV_CH_SURROUND_DIRECT_RIGHT = AvChSurroundDirectRight
  AV_CH_TOP_BACK_CENTER = AvChTopBackCenter
  AV_CH_TOP_BACK_LEFT = AvChTopBackLeft
  AV_CH_TOP_BACK_RIGHT = AvChTopBackRight
  AV_CH_TOP_CENTER = AvChTopCenter
  AV_CH_TOP_FRONT_CENTER = AvChTopFrontCenter
  AV_CH_TOP_FRONT_LEFT = AvChTopFrontLeft
  AV_CH_TOP_FRONT_RIGHT = AvChTopFrontRight
  AV_CH_WIDE_LEFT = AvChWideLeft
  AV_CH_WIDE_RIGHT = AvChWideRight
  FF_PROFILE_H264_BASELINE = FfProfileH264Baseline
  FF_PROFILE_H264_CAVLC_444 = FfProfileH264Cavlc444
  FF_PROFILE_H264_CONSTRAINED = FfProfileH264Constrained
  FF_PROFILE_H264_CONSTRAINED_BASELINE = FfProfileH264ConstrainedBaseline
  FF_PROFILE_H264_EXTENDED = FfProfileH264Extended
  FF_PROFILE_H264_HIGH = FfProfileH264High
  FF_PROFILE_H264_HIGH_10 = FfProfileH264High10
  FF_PROFILE_H264_HIGH_10_INTRA = FfProfileH264High10Intra
  FF_PROFILE_H264_HIGH_422 = FfProfileH264High422
  FF_PROFILE_H264_HIGH_422_INTRA = FfProfileH264High422Intra
  FF_PROFILE_H264_HIGH_444 = FfProfileH264High444
  FF_PROFILE_H264_HIGH_444_INTRA = FfProfileH264High444Intra
  FF_PROFILE_H264_HIGH_444_PREDICTIVE = FfProfileH264High444Predictive
  FF_PROFILE_H264_INTRA = FfProfileH264Intra
  FF_PROFILE_H264_MAIN = FfProfileH264Main
  IJKM_KEY_AUDIO_STREAM = IjkmKeyAudioStream
  IJKM_KEY_BITRATE = IjkmKeyBitrate
  IJKM_KEY_CHANNEL_LAYOUT = IjkmKeyChannelLayout
  IJKM_KEY_CODEC_LEVEL = IjkmKeyCodecLevel
  IJKM_KEY_CODEC_LONG_NAME = IjkmKeyCodecLongName
  IJKM_KEY_CODEC_NAME = IjkmKeyCodecName
  IJKM_KEY_CODEC_PIXEL_FORMAT = IjkmKeyCodecPixelFormat
  IJKM_KEY_CODEC_PROFILE = IjkmKeyCodecProfile
  IJKM_KEY_CODEC_PROFILE_ID = IjkmKeyCodecProfileId
  IJKM_KEY_DURATION_US = IjkmKeyDurationUs
  IJKM_KEY_FORMAT = IjkmKeyFormat
  IJKM_KEY_FPS_DEN = IjkmKeyFpsDen
  IJKM_KEY_FPS_NUM = IjkmKeyFpsNum
  IJKM_KEY_HEIGHT = IjkmKeyHeight
  IJKM_KEY_LANGUAGE = IjkmKeyLanguage
  IJKM_KEY_SAMPLE_RATE = IjkmKeySampleRate
  IJKM_KEY_SAR_DEN = IjkmKeySarDen
  IJKM_KEY_SAR_NUM = IjkmKeySarNum
  IJKM_KEY_START_US = IjkmKeyStartUs
  IJKM_KEY_STREAMS = IjkmKeyStreams
  IJKM_KEY_TBR_DEN = IjkmKeyTbrDen
  IJKM_KEY_TBR_NUM = IjkmKeyTbrNum
  IJKM_KEY_TIMEDTEXT_STREAM = IjkmKeyTimedtextStream
  IJKM_KEY_TYPE = IjkmKeyType
  IJKM_KEY_VIDEO_STREAM = IjkmKeyVideoStream
  IJKM_KEY_WIDTH = IjkmKeyWidth
  IJKM_VAL_TYPE__AUDIO = IjkmValTypeAudio
  IJKM_VAL_TYPE__TIMEDTEXT = IjkmValTypeTimedtext
  IJKM_VAL_TYPE__UNKNOWN = IjkmValTypeUnknown
  IJKM_VAL_TYPE__VIDEO = IjkmValTypeVideo
  mAudioStream = MAudioStream
  mBitrate = MBitrate
  mDurationUS = MDurationUS
  mFormat = MFormat
  mMediaMeta = MMediaMeta
  mStartUS = MStartUS
  mStreams = MStreams
  mVideoStream = MVideoStream
  getDurationInline()Ljava/lang/String; = DurationInline
  getInt(Ljava/lang/String;)I = GetInt(string)
  getInt(Ljava/lang/String;I)I = GetInt(string, int)
  getLong(Ljava/lang/String;)J = GetLong(string)
  getLong(Ljava/lang/String;J)J = GetLong(string, long)
  getParcelableArrayList(Ljava/lang/String;)Ljava/util/ArrayList; = GetParcelableArrayList(string)
  getString(Ljava/lang/String;)Ljava/lang/String; = GetString(string)
  parse(Landroid/os/Bundle;)Ltv/danmaku/ijk/media/player/IjkMediaMeta; = Parse(Android.OS.Bundle)
tv/danmaku/ijk/media/player/IjkMediaPlayer = TV.Danmaku.Ijk.Media.Player.IjkMediaPlayer
  <init>()V = .ctor()
  <init>(Ltv/danmaku/ijk/media/player/IjkLibLoader;)V = .ctor(TV.Danmaku.Ijk.Media.Player.IIjkLibLoader)
  FFP_PROP_FLOAT_DROP_FRAME_RATE = FfpPropFloatDropFrameRate
  FFP_PROP_FLOAT_PLAYBACK_RATE = FfpPropFloatPlaybackRate
  FFP_PROP_INT64_ASYNC_STATISTIC_BUF_BACKWARDS = FfpPropInt64AsyncStatisticBufBackwards
  FFP_PROP_INT64_ASYNC_STATISTIC_BUF_CAPACITY = FfpPropInt64AsyncStatisticBufCapacity
  FFP_PROP_INT64_ASYNC_STATISTIC_BUF_FORWARDS = FfpPropInt64AsyncStatisticBufForwards
  FFP_PROP_INT64_AUDIO_CACHED_BYTES = FfpPropInt64AudioCachedBytes
  FFP_PROP_INT64_AUDIO_CACHED_DURATION = FfpPropInt64AudioCachedDuration
  FFP_PROP_INT64_AUDIO_CACHED_PACKETS = FfpPropInt64AudioCachedPackets
  FFP_PROP_INT64_AUDIO_DECODER = FfpPropInt64AudioDecoder
  FFP_PROP_INT64_BIT_RATE = FfpPropInt64BitRate
  FFP_PROP_INT64_CACHE_STATISTIC_COUNT_BYTES = FfpPropInt64CacheStatisticCountBytes
  FFP_PROP_INT64_CACHE_STATISTIC_FILE_FORWARDS = FfpPropInt64CacheStatisticFileForwards
  FFP_PROP_INT64_CACHE_STATISTIC_FILE_POS = FfpPropInt64CacheStatisticFilePos
  FFP_PROP_INT64_CACHE_STATISTIC_PHYSICAL_POS = FfpPropInt64CacheStatisticPhysicalPos
  FFP_PROP_INT64_IMMEDIATE_RECONNECT = FfpPropInt64ImmediateReconnect
  FFP_PROP_INT64_LATEST_SEEK_LOAD_DURATION = FfpPropInt64LatestSeekLoadDuration
  FFP_PROP_INT64_LOGICAL_FILE_SIZE = FfpPropInt64LogicalFileSize
  FFP_PROP_INT64_SELECTED_AUDIO_STREAM = FfpPropInt64SelectedAudioStream
  FFP_PROP_INT64_SELECTED_TIMEDTEXT_STREAM = FfpPropInt64SelectedTimedtextStream
  FFP_PROP_INT64_SELECTED_VIDEO_STREAM = FfpPropInt64SelectedVideoStream
  FFP_PROP_INT64_SHARE_CACHE_DATA = FfpPropInt64ShareCacheData
  FFP_PROP_INT64_TCP_SPEED = FfpPropInt64TcpSpeed
  FFP_PROP_INT64_TRAFFIC_STATISTIC_BYTE_COUNT = FfpPropInt64TrafficStatisticByteCount
  FFP_PROP_INT64_VIDEO_CACHED_BYTES = FfpPropInt64VideoCachedBytes
  FFP_PROP_INT64_VIDEO_CACHED_DURATION = FfpPropInt64VideoCachedDuration
  FFP_PROP_INT64_VIDEO_CACHED_PACKETS = FfpPropInt64VideoCachedPackets
  FFP_PROP_INT64_VIDEO_DECODER = FfpPropInt64VideoDecoder
  FFP_PROPV_DECODER_AVCODEC = FfpPropvDecoderAvcodec
  FFP_PROPV_DECODER_MEDIACODEC = FfpPropvDecoderMediacodec
  FFP_PROPV_DECODER_UNKNOWN = FfpPropvDecoderUnknown
  FFP_PROPV_DECODER_VIDEOTOOLBOX = FfpPropvDecoderVideotoolbox
  IJK_LOG_DEBUG = IjkLogDebug
  IJK_LOG_DEFAULT = IjkLogDefault
  IJK_LOG_ERROR = IjkLogError
  IJK_LOG_FATAL = IjkLogFatal
  IJK_LOG_INFO = IjkLogInfo
  IJK_LOG_SILENT = IjkLogSilent
  IJK_LOG_UNKNOWN = IjkLogUnknown
  IJK_LOG_VERBOSE = IjkLogVerbose
  IJK_LOG_WARN = IjkLogWarn
  MEDIA_SET_VIDEO_SAR = MediaSetVideoSar
  OPT_CATEGORY_CODEC = OptCategoryCodec
  OPT_CATEGORY_FORMAT = OptCategoryFormat
  OPT_CATEGORY_PLAYER = OptCategoryPlayer
  OPT_CATEGORY_SWS = OptCategorySws
  PROP_FLOAT_VIDEO_DECODE_FRAMES_PER_SECOND = PropFloatVideoDecodeFramesPerSecond
  PROP_FLOAT_VIDEO_OUTPUT_FRAMES_PER_SECOND = PropFloatVideoOutputFramesPerSecond
  SDL_FCC_RV16 = SdlFccRv16
  SDL_FCC_RV32 = SdlFccRv32
  SDL_FCC_YV12 = SdlFccYv12
  getAsyncStatisticBufBackwards()J = AsyncStatisticBufBackwards
  getAsyncStatisticBufCapacity()J = AsyncStatisticBufCapacity
  getAsyncStatisticBufForwards()J = AsyncStatisticBufForwards
  getAudioCachedBytes()J = AudioCachedBytes
  getAudioCachedDuration()J = AudioCachedDuration
  getAudioCachedPackets()J = AudioCachedPackets
  getAudioSessionId()I = AudioSessionId
  getBitRate()J = BitRate
  getCacheStatisticCountBytes()J = CacheStatisticCountBytes
  getCacheStatisticFileForwards()J = CacheStatisticFileForwards
  getCacheStatisticFilePos()J = CacheStatisticFilePos
  getCacheStatisticPhysicalPos()J = CacheStatisticPhysicalPos
  getCurrentPosition()J = CurrentPosition
  getDataSource()Ljava/lang/String; = DataSource
  setDataSource(Ljava/lang/String;)V = DataSource
  getDropFrameRate()F = DropFrameRate
  getDuration()J = Duration
  getFileSize()J = FileSize
  isPlayable()Z = IsPlayable
  isPlaying()Z = IsPlaying
  isLooping()Z = Looping
  setLooping(Z)V = Looping
  getMediaInfo()Ltv/danmaku/ijk/media/player/MediaInfo; = MediaInfo
  getMediaMeta()Landroid/os/Bundle; = MediaMeta
  getSeekLoadDuration()J = SeekLoadDuration
  getTcpSpeed()J = TcpSpeed
  getTrafficStatisticByteCount()J = TrafficStatisticByteCount
  getVideoCachedBytes()J = VideoCachedBytes
  getVideoCachedDuration()J = VideoCachedDuration
  getVideoCachedPackets()J = VideoCachedPackets
  getVideoDecodeFramesPerSecond()F = VideoDecodeFramesPerSecond
  getVideoDecoder()I = VideoDecoder
  getVideoHeight()I = VideoHeight
  getVideoOutputFramesPerSecond()F = VideoOutputFramesPerSecond
  getVideoSarDen()I = VideoSarDen
  getVideoSarNum()I = VideoSarNum
  getVideoWidth()I = VideoWidth
  _prepareAsync()V = _prepareAsync()
  deselectTrack(I)V = DeselectTrack(int)
  getColorFormatName(I)Ljava/lang/String; = GetColorFormatName(int)
  getSelectedTrack(I)I = GetSelectedTrack(int)
  getSpeed(F)F = GetSpeed(float)
  getTrackInfo()[Ltv/danmaku/ijk/media/player/misc/IjkTrackInfo; = GetTrackInfo()
  httphookReconnect()V = HttphookReconnect()
  loadLibrariesOnce(Ltv/danmaku/ijk/media/player/IjkLibLoader;)V = LoadLibrariesOnce(TV.Danmaku.Ijk.Media.Player.IIjkLibLoader)
  native_profileBegin(Ljava/lang/String;)V = Native_profileBegin(string)
  native_profileEnd()V = Native_profileEnd()
  native_setLogLevel(I)V = Native_setLogLevel(int)
  pause()V = Pause()
  prepareAsync()V = PrepareAsync()
  release()V = Release()
  reset()V = Reset()
  seekTo(J)V = SeekTo(long)
  selectTrack(I)V = SelectTrack(int)
  setAndroidIOCallback(Ltv/danmaku/ijk/media/player/misc/IAndroidIO;)V = SetAndroidIOCallback(TV.Danmaku.Ijk.Media.Player.Misc.IAndroidIO)
  setAudioStreamType(I)V = SetAudioStreamType(int)
  setCacheShare(I)V = SetCacheShare(int)
  setDataSource(Landroid/content/Context;Landroid/net/Uri;)V = SetDataSource(Android.Content.Context, Android.Net.Uri)
  setDataSource(Landroid/content/Context;Landroid/net/Uri;Ljava/util/Map;)V = SetDataSource(Android.Content.Context, Android.Net.Uri, System.Collections.Generic.IDictionary<string, string>)
  setDataSource(Ljava/io/FileDescriptor;)V = SetDataSource(Java.IO.FileDescriptor)
  setDataSource(Ljava/lang/String;Ljava/util/Map;)V = SetDataSource(string, System.Collections.Generic.IDictionary<string, string>)
  setDisplay(Landroid/view/SurfaceHolder;)V = SetDisplay(Android.Views.ISurfaceHolder)
  setKeepInBackground(Z)V = SetKeepInBackground(bool)
  setLogEnabled(Z)V = SetLogEnabled(bool)
  setOnControlMessageListener(Ltv/danmaku/ijk/media/player/IjkMediaPlayer$OnControlMessageListener;)V = SetOnControlMessageListener(TV.Danmaku.Ijk.Media.Player.IjkMediaPlayer.IOnControlMessageListener)
  setOnMediaCodecSelectListener(Ltv/danmaku/ijk/media/player/IjkMediaPlayer$OnMediaCodecSelectListener;)V = SetOnMediaCodecSelectListener(TV.Danmaku.Ijk.Media.Player.IjkMediaPlayer.IOnMediaCodecSelectListener)
  setOnNativeInvokeListener(Ltv/danmaku/ijk/media/player/IjkMediaPlayer$OnNativeInvokeListener;)V = SetOnNativeInvokeListener(TV.Danmaku.Ijk.Media.Player.IjkMediaPlayer.IOnNativeInvokeListener)
  setOption(ILjava/lang/String;Ljava/lang/String;)V = SetOption(int, string, string)
  setOption(ILjava/lang/String;J)V = SetOption(int, string, long)
  setScreenOnWhilePlaying(Z)V = SetScreenOnWhilePlaying(bool)
  setSpeed(F)V = SetSpeed(float)
  setSurface(Landroid/view/Surface;)V = SetSurface(Android.Views.Surface)
  setVolume(FF)V = SetVolume(float, float)
  setWakeMode(Landroid/content/Context;I)V = SetWakeMode(Android.Content.Context, int)
  start()V = Start()
  stop()V = Stop()
tv/danmaku/ijk/media/player/IjkTimedText = TV.Danmaku.Ijk.Media.Player.IjkTimedText
  <init>(Landroid/graphics/Rect;Ljava/lang/String;)V = .ctor(Android.Graphics.Rect, string)
  getBounds()Landroid/graphics/Rect; = Bounds
  getText()Ljava/lang/String; = Text
tv/danmaku/ijk/media/player/IMediaPlayer = TV.Danmaku.Ijk.Media.Player.IMediaPlayer
  MEDIA_ERROR_IO = MediaErrorIo
  MEDIA_ERROR_MALFORMED = MediaErrorMalformed
  MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK = MediaErrorNotValidForProgressivePlayback
  MEDIA_ERROR_SERVER_DIED = MediaErrorServerDied
  MEDIA_ERROR_TIMED_OUT = MediaErrorTimedOut
  MEDIA_ERROR_UNKNOWN = MediaErrorUnknown
  MEDIA_ERROR_UNSUPPORTED = MediaErrorUnsupported
  MEDIA_INFO_AUDIO_DECODED_START = MediaInfoAudioDecodedStart
  MEDIA_INFO_AUDIO_RENDERING_START = MediaInfoAudioRenderingStart
  MEDIA_INFO_AUDIO_SEEK_RENDERING_START = MediaInfoAudioSeekRenderingStart
  MEDIA_INFO_BAD_INTERLEAVING = MediaInfoBadInterleaving
  MEDIA_INFO_BUFFERING_END = MediaInfoBufferingEnd
  MEDIA_INFO_BUFFERING_START = MediaInfoBufferingStart
  MEDIA_INFO_COMPONENT_OPEN = MediaInfoComponentOpen
  MEDIA_INFO_FIND_STREAM_INFO = MediaInfoFindStreamInfo
  MEDIA_INFO_MEDIA_ACCURATE_SEEK_COMPLETE = MediaInfoMediaAccurateSeekComplete
  MEDIA_INFO_METADATA_UPDATE = MediaInfoMetadataUpdate
  MEDIA_INFO_NETWORK_BANDWIDTH = MediaInfoNetworkBandwidth
  MEDIA_INFO_NOT_SEEKABLE = MediaInfoNotSeekable
  MEDIA_INFO_OPEN_INPUT = MediaInfoOpenInput
  MEDIA_INFO_STARTED_AS_NEXT = MediaInfoStartedAsNext
  MEDIA_INFO_SUBTITLE_TIMED_OUT = MediaInfoSubtitleTimedOut
  MEDIA_INFO_TIMED_TEXT_ERROR = MediaInfoTimedTextError
  MEDIA_INFO_UNKNOWN = MediaInfoUnknown
  MEDIA_INFO_UNSUPPORTED_SUBTITLE = MediaInfoUnsupportedSubtitle
  MEDIA_INFO_VIDEO_DECODED_START = MediaInfoVideoDecodedStart
  MEDIA_INFO_VIDEO_RENDERING_START = MediaInfoVideoRenderingStart
  MEDIA_INFO_VIDEO_ROTATION_CHANGED = MediaInfoVideoRotationChanged
  MEDIA_INFO_VIDEO_SEEK_RENDERING_START = MediaInfoVideoSeekRenderingStart
  MEDIA_INFO_VIDEO_TRACK_LAGGING = MediaInfoVideoTrackLagging
  getAudioSessionId()I = AudioSessionId
  getCurrentPosition()J = CurrentPosition
  getDataSource()Ljava/lang/String; = DataSource
  setDataSource(Ljava/lang/String;)V = DataSource
  getDuration()J = Duration
  isPlayable()Z = IsPlayable
  isPlaying()Z = IsPlaying
  isLooping()Z = Looping
  setLooping(Z)V = Looping
  getMediaInfo()Ltv/danmaku/ijk/media/player/MediaInfo; = MediaInfo
  getVideoHeight()I = VideoHeight
  getVideoSarDen()I = VideoSarDen
  getVideoSarNum()I = VideoSarNum
  getVideoWidth()I = VideoWidth
  getTrackInfo()[Ltv/danmaku/ijk/media/player/misc/ITrackInfo; = GetTrackInfo()
  pause()V = Pause()
  prepareAsync()V = PrepareAsync()
  release()V = Release()
  reset()V = Reset()
  seekTo(J)V = SeekTo(long)
  setAudioStreamType(I)V = SetAudioStreamType(int)
  setDataSource(Landroid/content/Context;Landroid/net/Uri;)V = SetDataSource(Android.Content.Context, Android.Net.Uri)
  setDataSource(Landroid/content/Context;Landroid/net/Uri;Ljava/util/Map;)V = SetDataSource(Android.Content.Context, Android.Net.Uri, System.Collections.Generic.IDictionary<string, string>)
  setDataSource(Ljava/io/FileDescriptor;)V = SetDataSource(Java.IO.FileDescriptor)
  setDataSource(Ltv/danmaku/ijk/media/player/misc/IMediaDataSource;)V = SetDataSource(TV.Danmaku.Ijk.Media.Player.Misc.IMediaDataSource)
  setDisplay(Landroid/view/SurfaceHolder;)V = SetDisplay(Android.Views.ISurfaceHolder)
  setKeepInBackground(Z)V = SetKeepInBackground(bool)
  setLogEnabled(Z)V = SetLogEnabled(bool)
  setOnBufferingUpdateListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnBufferingUpdateListener;)V = SetOnBufferingUpdateListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnBufferingUpdateListener)
  setOnCompletionListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnCompletionListener;)V = SetOnCompletionListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnCompletionListener)
  setOnErrorListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnErrorListener;)V = SetOnErrorListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnErrorListener)
  setOnInfoListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnInfoListener;)V = SetOnInfoListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnInfoListener)
  setOnPreparedListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnPreparedListener;)V = SetOnPreparedListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnPreparedListener)
  setOnSeekCompleteListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnSeekCompleteListener;)V = SetOnSeekCompleteListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnSeekCompleteListener)
  setOnTimedTextListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnTimedTextListener;)V = SetOnTimedTextListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnTimedTextListener)
  setOnVideoSizeChangedListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnVideoSizeChangedListener;)V = SetOnVideoSizeChangedListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnVideoSizeChangedListener)
  setScreenOnWhilePlaying(Z)V = SetScreenOnWhilePlaying(bool)
  setSurface(Landroid/view/Surface;)V = SetSurface(Android.Views.Surface)
  setVolume(FF)V = SetVolume(float, float)
  setWakeMode(Landroid/content/Context;I)V = SetWakeMode(Android.Content.Context, int)
  start()V = Start()
  stop()V = Stop()
tv/danmaku/ijk/media/player/ISurfaceTextureHolder = TV.Danmaku.Ijk.Media.Player.ISurfaceTextureHolder
  getSurfaceTexture()Landroid/graphics/SurfaceTexture; = SurfaceTexture
  setSurfaceTexture(Landroid/graphics/SurfaceTexture;)V = SurfaceTexture
  setSurfaceTextureHost(Ltv/danmaku/ijk/media/player/ISurfaceTextureHost;)V = SetSurfaceTextureHost(TV.Danmaku.Ijk.Media.Player.ISurfaceTextureHost)
tv/danmaku/ijk/media/player/ISurfaceTextureHost = TV.Danmaku.Ijk.Media.Player.ISurfaceTextureHost
  releaseSurfaceTexture(Landroid/graphics/SurfaceTexture;)V = ReleaseSurfaceTexture(Android.Graphics.SurfaceTexture)
tv/danmaku/ijk/media/player/MediaInfo = TV.Danmaku.Ijk.Media.Player.MediaInfo
  <init>()V = .ctor()
  mAudioDecoder = MAudioDecoder
  mAudioDecoderImpl = MAudioDecoderImpl
  mMediaPlayerName = MMediaPlayerName
  mMeta = MMeta
  mVideoDecoder = MVideoDecoder
  mVideoDecoderImpl = MVideoDecoderImpl
tv/danmaku/ijk/media/player/MediaPlayerProxy = TV.Danmaku.Ijk.Media.Player.MediaPlayerProxy
  <init>(Ltv/danmaku/ijk/media/player/IMediaPlayer;)V = .ctor(TV.Danmaku.Ijk.Media.Player.IMediaPlayer)
  mBackEndMediaPlayer = MBackEndMediaPlayer
  getAudioSessionId()I = AudioSessionId
  getCurrentPosition()J = CurrentPosition
  getDataSource()Ljava/lang/String; = DataSource
  setDataSource(Ljava/lang/String;)V = DataSource
  getDuration()J = Duration
  getInternalMediaPlayer()Ltv/danmaku/ijk/media/player/IMediaPlayer; = InternalMediaPlayer
  isPlayable()Z = IsPlayable
  isPlaying()Z = IsPlaying
  isLooping()Z = Looping
  setLooping(Z)V = Looping
  getMediaInfo()Ltv/danmaku/ijk/media/player/MediaInfo; = MediaInfo
  getVideoHeight()I = VideoHeight
  getVideoSarDen()I = VideoSarDen
  getVideoSarNum()I = VideoSarNum
  getVideoWidth()I = VideoWidth
  getTrackInfo()[Ltv/danmaku/ijk/media/player/misc/ITrackInfo; = GetTrackInfo()
  pause()V = Pause()
  prepareAsync()V = PrepareAsync()
  release()V = Release()
  reset()V = Reset()
  seekTo(J)V = SeekTo(long)
  setAudioStreamType(I)V = SetAudioStreamType(int)
  setDataSource(Landroid/content/Context;Landroid/net/Uri;)V = SetDataSource(Android.Content.Context, Android.Net.Uri)
  setDataSource(Landroid/content/Context;Landroid/net/Uri;Ljava/util/Map;)V = SetDataSource(Android.Content.Context, Android.Net.Uri, System.Collections.Generic.IDictionary<string, string>)
  setDataSource(Ljava/io/FileDescriptor;)V = SetDataSource(Java.IO.FileDescriptor)
  setDataSource(Ltv/danmaku/ijk/media/player/misc/IMediaDataSource;)V = SetDataSource(TV.Danmaku.Ijk.Media.Player.Misc.IMediaDataSource)
  setDisplay(Landroid/view/SurfaceHolder;)V = SetDisplay(Android.Views.ISurfaceHolder)
  setKeepInBackground(Z)V = SetKeepInBackground(bool)
  setLogEnabled(Z)V = SetLogEnabled(bool)
  setOnBufferingUpdateListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnBufferingUpdateListener;)V = SetOnBufferingUpdateListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnBufferingUpdateListener)
  setOnCompletionListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnCompletionListener;)V = SetOnCompletionListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnCompletionListener)
  setOnErrorListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnErrorListener;)V = SetOnErrorListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnErrorListener)
  setOnInfoListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnInfoListener;)V = SetOnInfoListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnInfoListener)
  setOnPreparedListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnPreparedListener;)V = SetOnPreparedListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnPreparedListener)
  setOnSeekCompleteListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnSeekCompleteListener;)V = SetOnSeekCompleteListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnSeekCompleteListener)
  setOnTimedTextListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnTimedTextListener;)V = SetOnTimedTextListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnTimedTextListener)
  setOnVideoSizeChangedListener(Ltv/danmaku/ijk/media/player/IMediaPlayer$OnVideoSizeChangedListener;)V = SetOnVideoSizeChangedListener(TV.Danmaku.Ijk.Media.Player.IMediaPlayerOnVideoSizeChangedListener)
  setScreenOnWhilePlaying(Z)V = SetScreenOnWhilePlaying(bool)
  setSurface(Landroid/view/Surface;)V = SetSurface(Android.Views.Surface)
  setVolume(FF)V = SetVolume(float, float)
  setWakeMode(Landroid/content/Context;I)V = SetWakeMode(Android.Content.Context, int)
  start()V = Start()
  stop()V = Stop()
tv/danmaku/ijk/media/player/misc/AndroidMediaFormat = TV.Danmaku.Ijk.Media.Player.Misc.AndroidMediaFormat
  <init>(Landroid/media/MediaFormat;)V = .ctor(Android.Media.MediaFormat)
  getInteger(Ljava/lang/String;)I = GetInteger(string)
  getString(Ljava/lang/String;)Ljava/lang/String; = GetString(string)
tv/danmaku/ijk/media/player/misc/AndroidTrackInfo = TV.Danmaku.Ijk.Media.Player.Misc.AndroidTrackInfo
  getFormat()Ltv/danmaku/ijk/media/player/misc/IMediaFormat; = Format
  getInfoInline()Ljava/lang/String; = InfoInline
  getLanguage()Ljava/lang/String; = Language
  getTrackType()I = TrackType
  fromMediaPlayer(Landroid/media/MediaPlayer;)[Ltv/danmaku/ijk/media/player/misc/AndroidTrackInfo; = FromMediaPlayer(Android.Media.MediaPlayer)
tv/danmaku/ijk/media/player/misc/IAndroidIO = TV.Danmaku.Ijk.Media.Player.Misc.IAndroidIO
  close()I = Close()
  open(Ljava/lang/String;)I = Open(string)
  read([BI)I = Read(byte[], int)
  seek(JI)J = Seek(long, int)
tv/danmaku/ijk/media/player/misc/IjkMediaFormat = TV.Danmaku.Ijk.Media.Player.Misc.IjkMediaFormat
  <init>(Ltv/danmaku/ijk/media/player/IjkMediaMeta$IjkStreamMeta;)V = .ctor(TV.Danmaku.Ijk.Media.Player.IjkMediaMeta.IjkStreamMeta)
  CODEC_NAME_H264 = CodecNameH264
  KEY_IJK_BIT_RATE_UI = KeyIjkBitRateUi
  KEY_IJK_CHANNEL_UI = KeyIjkChannelUi
  KEY_IJK_CODEC_LONG_NAME_UI = KeyIjkCodecLongNameUi
  KEY_IJK_CODEC_NAME_UI = KeyIjkCodecNameUi
  KEY_IJK_CODEC_PIXEL_FORMAT_UI = KeyIjkCodecPixelFormatUi
  KEY_IJK_CODEC_PROFILE_LEVEL_UI = KeyIjkCodecProfileLevelUi
  KEY_IJK_FRAME_RATE_UI = KeyIjkFrameRateUi
  KEY_IJK_RESOLUTION_UI = KeyIjkResolutionUi
  KEY_IJK_SAMPLE_RATE_UI = KeyIjkSampleRateUi
  mMediaFormat = MMediaFormat
  getInteger(Ljava/lang/String;)I = GetInteger(string)
  getString(Ljava/lang/String;)Ljava/lang/String; = GetString(string)
tv/danmaku/ijk/media/player/misc/IjkTrackInfo = TV.Danmaku.Ijk.Media.Player.Misc.IjkTrackInfo
  <init>(Ltv/danmaku/ijk/media/player/IjkMediaMeta$IjkStreamMeta;)V = .ctor(TV.Danmaku.Ijk.Media.Player.IjkMediaMeta.IjkStreamMeta)
  getFormat()Ltv/danmaku/ijk/media/player/misc/IMediaFormat; = Format
  getInfoInline()Ljava/lang/String; = InfoInline
  getLanguage()Ljava/lang/String; = Language
  getTrackType()I = TrackType
  setTrackType(I)V = TrackType
  setMediaMeta(Ltv/danmaku/ijk/media/player/IjkMediaMeta$IjkStreamMeta;)V = SetMediaMeta(TV.Danmaku.Ijk.Media.Player.IjkMediaMeta.IjkStreamMeta)
tv/danmaku/ijk/media/player/misc/IMediaDataSource = TV.Danmaku.Ijk.Media.Player.Misc.IMediaDataSource
  getSize()J = Size
  close()V = Close()
  readAt(J[BII)I = ReadAt(long, byte[], int, int)
tv/danmaku/ijk/media/player/misc/IMediaFormat = TV.Danmaku.Ijk.Media.Player.Misc.IMediaFormat
  KEY_HEIGHT = KeyHeight
  KEY_MIME = KeyMime
  KEY_WIDTH = KeyWidth
  getInteger(Ljava/lang/String;)I = GetInteger(string)
  getString(Ljava/lang/String;)Ljava/lang/String; = GetString(string)
tv/danmaku/ijk/media/player/misc/ITrackInfo = TV.Danmaku.Ijk.Media.Player.Misc.ITrackInfo
  MEDIA_TRACK_TYPE_AUDIO = MediaTrackTypeAudio
  MEDIA_TRACK_TYPE_METADATA = MediaTrackTypeMetadata
  MEDIA_TRACK_TYPE_SUBTITLE = MediaTrackTypeSubtitle
  MEDIA_TRACK_TYPE_TIMEDTEXT = MediaTrackTypeTimedtext
  MEDIA_TRACK_TYPE_UNKNOWN = MediaTrackTypeUnknown
  MEDIA_TRACK_TYPE_VIDEO = MediaTrackTypeVideo
  getFormat()Ltv/danmaku/ijk/media/player/misc/IMediaFormat; = Format
  getInfoInline()Ljava/lang/String; = InfoInline
  getLanguage()Ljava/lang/String; = Language
  getTrackType()I = TrackType
tv/danmaku/ijk/media/player/pragma/DebugLog = TV.Danmaku.Ijk.Media.Player.Pragma.DebugLog
  <init>()V = .ctor()
  ENABLE_DEBUG = EnableDebug
  ENABLE_ERROR = EnableError
  ENABLE_INFO = EnableInfo
  ENABLE_VERBOSE = EnableVerbose
  ENABLE_WARN = EnableWarn
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = D(string, string, Java.Lang.Throwable)
  dfmt(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = Dfmt(string, string, params Java.Lang.Object[])
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
  e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = E(string, string, Java.Lang.Throwable)
  efmt(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = Efmt(string, string, params Java.Lang.Object[])
  i(Ljava/lang/String;Ljava/lang/String;)V = I(string, string)
  i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = I(string, string, Java.Lang.Throwable)
  ifmt(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = Ifmt(string, string, params Java.Lang.Object[])
  printCause(Ljava/lang/Throwable;)V = PrintCause(Java.Lang.Throwable)
  printStackTrace(Ljava/lang/Throwable;)V = PrintStackTrace(Java.Lang.Throwable)
  v(Ljava/lang/String;Ljava/lang/String;)V = V(string, string)
  v(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = V(string, string, Java.Lang.Throwable)
  vfmt(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = Vfmt(string, string, params Java.Lang.Object[])
  w(Ljava/lang/String;Ljava/lang/String;)V = W(string, string)
  w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = W(string, string, Java.Lang.Throwable)
  wfmt(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V = Wfmt(string, string, params Java.Lang.Object[])
tv/danmaku/ijk/media/player/pragma/Pragma = TV.Danmaku.Ijk.Media.Player.Pragma.Pragma
  <init>()V = .ctor()
  ENABLE_VERBOSE = EnableVerbose
tv/danmaku/ijk/media/player/TextureMediaPlayer = TV.Danmaku.Ijk.Media.Player.TextureMediaPlayer
  <init>(Ltv/danmaku/ijk/media/player/IMediaPlayer;)V = .ctor(TV.Danmaku.Ijk.Media.Player.IMediaPlayer)
  getSurfaceTexture()Landroid/graphics/SurfaceTexture; = SurfaceTexture
  setSurfaceTexture(Landroid/graphics/SurfaceTexture;)V = SurfaceTexture
  releaseSurfaceTexture()V = ReleaseSurfaceTexture()
  setSurfaceTextureHost(Ltv/danmaku/ijk/media/player/ISurfaceTextureHost;)V = SetSurfaceTextureHost(TV.Danmaku.Ijk.Media.Player.ISurfaceTextureHost)
